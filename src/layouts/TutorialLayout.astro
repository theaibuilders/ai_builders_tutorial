---
import LeftSidebar from '../components/LeftSidebar.astro';
import MainContent from '../components/MainContent.astro';
import RightSidebar from '../components/RightSidebar.astro';
import type { TutorialFile, TutorialSection } from '../types/tutorial';

interface Props {
  title: string;
  currentFile?: TutorialFile;
  sections: TutorialSection[];
  headings?: Array<{id: string, text: string, level: number}>;
  description?: string;
  keywords?: string[];
  type?: 'website' | 'article';
}

const { 
  title, 
  currentFile, 
  sections, 
  headings = [],
  description,
  keywords = [],
  type = currentFile ? 'article' : 'website'
} = Astro.props;

// Generate dynamic description based on content
const defaultDescription = currentFile 
  ? `Learn ${title} - Interactive AI tutorial with hands-on examples, code snippets, and practical applications. Master AI engineering with step-by-step guidance.`
  : "Master AI development with hands-on tutorials covering LangChain, OpenAI API, Claude API, RAG systems, AI agents, and LLM applications. Interactive Jupyter notebooks with practical examples.";

const finalDescription = description || defaultDescription;

// Enhanced keywords based on the current page
const baseKeywords = [
  "AI Engineering tutorial",
  "AI Engineering course",
  "AI Engineer tutorial",
  "Artificial Intelligence course",
  "LLM tutorial",
  "LLM course",
  "AI agent tutorial",
  "AI agent course",
  "Free AI development course",
  "Free AI model course",
  "Machine Learning tutorial",
  "LangChain tutorial",
  "OpenAI API tutorial",
  "Claude API tutorial",
  "RAG tutorial",
  "AI development course",
  "Python AI tutorial",
  "Deep learning course",
  "Natural Language Processing tutorial",
  "Chatbot development",
  "AI model training",
  "LLM application development",
  "Anthropic Claude tutorial",
  "AI frameworks",
  "AI programming"
];

// Add page-specific keywords
let pageKeywords = [...baseKeywords, ...keywords];
if (currentFile) {
  if (title.toLowerCase().includes('langchain')) {
    pageKeywords.push("LangChain tutorial", "LangChain framework", "LangChain Python", "LangChain agents", "LangChain chains");
  }
  if (title.toLowerCase().includes('openai')) {
    pageKeywords.push("OpenAI API", "GPT tutorial", "OpenAI Python", "GPT-4 tutorial", "OpenAI completions");
  }
  if (title.toLowerCase().includes('claude')) {
    pageKeywords.push("Claude API", "Anthropic Claude", "Claude tutorial", "Claude Python", "Claude AI");
  }
  if (title.toLowerCase().includes('rag')) {
    pageKeywords.push("RAG system", "Retrieval Augmented Generation", "Vector database", "Document retrieval");
  }
  if (title.toLowerCase().includes('llamaindex')) {
    pageKeywords.push("LlamaIndex tutorial", "LlamaIndex Python", "Document indexing", "Knowledge base");
  }
}

const allKeywords = pageKeywords.join(", ");
const canonicalUrl = `https://tutorial.theaibuilders.dev${Astro.url.pathname}`;
const pageTitle = `${title} | AI Builders Tutorial - Learn AI Engineering & Development`;
---

<!DOCTYPE html>
<html lang="en" class="dark">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <link rel="manifest" href="/manifest.json" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    
    <!-- Primary Meta Tags -->
    <title>{pageTitle}</title>
    <meta name="title" content={pageTitle} />
    <meta name="description" content={finalDescription} />
    <meta name="keywords" content={allKeywords} />
    <meta name="author" content="AI Builders Team" />
    <meta name="robots" content="index, follow" />
    <meta name="language" content="English" />
    <meta name="revisit-after" content="7 days" />
    
    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalUrl} />
    <link rel="alternate" hreflang="en" href={canonicalUrl} />
    <link rel="alternate" hreflang="x-default" href={canonicalUrl} />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content={type} />
    <meta property="og:url" content={canonicalUrl} />
    <meta property="og:title" content={pageTitle} />
    <meta property="og:description" content={finalDescription} />
    <meta property="og:image" content="https://tutorial.theaibuilders.dev/github_banner.png" />
    <meta property="og:updated_time" content={currentFile?.metadata?.lastUpdated || new Date().toISOString()} />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta property="og:site_name" content="AI Builders Tutorial" />
    <meta property="og:locale" content="en_US" />
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalUrl} />
    <meta property="twitter:title" content={pageTitle} />
    <meta property="twitter:description" content={finalDescription} />
    <meta property="twitter:image" content="https://tutorial.theaibuilders.dev/github_banner.png" />
    
    <!-- Article-specific meta tags -->
    {type === 'article' && (
      <>
        <meta property="article:author" content="AI Builders Team" />
        <meta property="article:section" content="AI Tutorial" />
        <meta property="article:tag" content="AI Engineering" />
        <meta property="article:tag" content="Machine Learning" />
        <meta property="article:tag" content="Tutorial" />
        <meta property="article:published_time" content={currentFile?.metadata?.lastUpdated || new Date().toISOString()} />
        <meta property="article:modified_time" content={currentFile?.metadata?.lastUpdated || new Date().toISOString()} />
      </>
    )}
    
    <!-- Additional Meta Tags -->
    <meta name="theme-color" content="#1f2937" />
    <meta name="msapplication-TileColor" content="#1f2937" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
    <meta name="googlebot" content="index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1" />
    <meta name="bingbot" content="index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1" />
    
    <!-- Structured Data (JSON-LD) -->
    <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": type === 'article' ? "TechArticle" : "EducationalOrganization",
      "name": currentFile ? title : "AI Builders Tutorial",
      "headline": currentFile ? title : "AI Builders Tutorial - Learn AI Engineering & Development",
      "description": finalDescription,
      "url": canonicalUrl,
      "image": "https://tutorial.theaibuilders.dev/github_banner.png",
      "author": {
        "@type": "Organization",
        "name": "AI Builders Team"
      },
      "publisher": {
        "@type": "Organization",
        "name": "AI Builders Team",
        "logo": {
          "@type": "ImageObject",
          "url": "https://tutorial.theaibuilders.dev/ai-builders-tutorial-logo.png"
        }
      },
      "datePublished": currentFile?.metadata?.lastUpdated || "2025-08-02",
      "dateModified": currentFile?.metadata?.lastUpdated || "2025-08-02",
      "mainEntityOfPage": {
        "@type": "WebPage",
        "@id": canonicalUrl
      },
      "articleSection": "AI Tutorial",
      "keywords": allKeywords,
      "educationalLevel": currentFile?.metadata?.difficulty || "Beginner to Advanced",
      "teaches": [
        "AI Engineering",
        "Large Language Models",
        "RAG Systems", 
        "AI Agents",
        "LangChain Framework",
        "OpenAI API",
        "Anthropic Claude API",
        "Machine Learning",
        "Natural Language Processing"
      ],
      "isAccessibleForFree": true,
      "license": "https://creativecommons.org/licenses/by/4.0/"
    }
    </script>

    <!-- Structured Data: WebSite with SearchAction -->
    <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "WebSite",
      "url": "https://tutorial.theaibuilders.dev/",
      "name": "AI Builders Tutorial",
      "potentialAction": {
        "@type": "SearchAction",
        "target": "https://tutorial.theaibuilders.dev/?q={search_term_string}",
        "query-input": "required name=search_term_string"
      }
    }
    </script>

    <!-- Structured Data: Organization -->
    <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "Organization",
      "name": "AI Builders",
      "url": "https://tutorial.theaibuilders.dev/",
  "logo": "https://tutorial.theaibuilders.dev/ai-builders-tutorial-logo.png",
      "sameAs": [
        "https://github.com/devonsunml/ai_builders_tutorial"
      ]
    }
    </script>
    
    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&family=Fira+Code:wght@300;400;500;600&display=swap" rel="stylesheet">
    
    <!-- Performance and Resource Hints -->
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    <link rel="dns-prefetch" href="https://fonts.gstatic.com">
    <link rel="dns-prefetch" href="https://www.googletagmanager.com">
    
    <!-- Preload critical resources -->
    <link rel="preload" href="/github_banner.png" as="image" type="image/png">
    <link rel="search" type="application/opensearchdescription+xml" title="Search AI Builders Tutorial" href="/opensearch.xml">
    
    <!-- Additional SEO Meta Tags -->
    <meta name="generator" content="Astro" />
    <meta name="format-detection" content="telephone=no" />
    <meta name="mobile-web-app-capable" content="yes" />
    <meta name="application-name" content="AI Builders Tutorial" />
    
    <!-- Geo tags for location-based search -->
    <meta name="geo.region" content="US" />
    <meta name="geo.placename" content="United States" />
    
    <!-- Copyright and content info -->
    <meta name="copyright" content="AI Builders Team" />
    <meta name="distribution" content="global" />
    <meta name="rating" content="general" />
    <meta name="referrer" content="origin-when-cross-origin" />
    
    <!-- Additional structured data for breadcrumbs if it's a tutorial page -->
    {currentFile && (
      <script type="application/ld+json">
      {
        "@context": "https://schema.org",
        "@type": "BreadcrumbList",
        "itemListElement": [
          {
            "@type": "ListItem",
            "position": 1,
            "name": "Home",
            "item": "https://tutorial.theaibuilders.dev"
          },
          {
            "@type": "ListItem",
            "position": 2,
            "name": "Tutorials",
            "item": "https://tutorial.theaibuilders.dev/tutorials"
          },
          {
            "@type": "ListItem",
            "position": 3,
            "name": title,
            "item": canonicalUrl
          }
        ]
      }
      </script>
    )}

    {currentFile && (
      <script type="application/ld+json">
      {
        "@context": "https://schema.org",
        "@type": "Course",
        "name": title,
        "description": finalDescription,
        "provider": {
          "@type": "Organization",
          "name": "AI Builders",
          "sameAs": "https://tutorial.theaibuilders.dev/"
        },
        "isAccessibleForFree": true,
        "inLanguage": "en"
      }
      </script>
    )}
    
    <!-- Theme Script (runs before page load) -->
    <script is:inline>
      // Always use dark mode
      document.documentElement.classList.add('dark');
    </script>
    
    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-RNHCYDMDCX"></script>
    <script is:inline>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());

      gtag('config', 'G-RNHCYDMDCX');
    </script>

    <!-- Google AdSense -->
    <!-- To disable locally, you can guard with: {import.meta.env.PROD && (<script ... />)} -->
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-1158822991746192" crossorigin="anonymous"></script>
  </head>
  
  <body class="bg-dark-bg text-dark-text font-sans antialiased">
    <!-- Mobile Navigation Toggle -->
    <div class="lg:hidden fixed top-0 left-0 right-0 z-50 bg-dark-bg border-b border-dark-border px-4 py-0.5">
      <div class="flex items-center justify-between h-16">
        <div class="flex items-center gap-2">
          <!-- Navigation Toggle -->
          <button
            id="mobile-nav-toggle"
            class="p-1 rounded-lg hover:bg-dark-hover transition-colors"
            aria-label="Toggle navigation"
          >
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
            </svg>
          </button>
        </div>
        
        <!-- Mobile Icons -->
        <div class="flex items-center gap-2">
          <a
            href="https://www.theaibuilders.dev/"
            target="_blank"
            rel="noopener noreferrer"
            class="w-8 h-8 flex items-center justify-center transition-colors hover:text-gray-100"
            aria-label="Visit AI Builders Website"
          >
            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-gray-300"><circle cx="12" cy="12" r="10"/><path d="M12 2a14.5 14.5 0 0 0 0 20 14.5 14.5 0 0 0 0-20"/><path d="M2 12h20"/></svg>
          </a>
          <a
            href="https://github.com/theaibuilders"
            target="_blank"
            rel="noopener noreferrer"
            class="w-8 h-8 flex items-center justify-center transition-colors hover:text-gray-100"
            aria-label="View on GitHub"
          >
            <svg viewBox="0 0 24 24" fill="currentColor" class="w-4 h-4 text-gray-300">
              <path d="M12 0C5.37 0 0 5.373 0 12c0 5.302 3.438 9.8 8.207 11.387.6.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.108-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.30.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576C20.565 21.796 24 17.298 24 12c0-6.627-5.373-12-12-12z"/>
            </svg>
          </a>
          <a
            href="https://x.com/theaibuilders"
            target="_blank"
            rel="noopener noreferrer"
            class="w-8 h-8 flex items-center justify-center transition-colors hover:text-gray-100"
            aria-label="Follow on X"
          >
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-4 h-4 text-gray-300">
              <path d="M18.244 2h3.511l-7.582 8.689L23 22h-6.756l-4.811-6.315L5.912 22H2.4l7.938-9.097L1 2h6.756l4.365 5.739L18.244 2z" />
            </svg>
          </a>
          <a
            href="https://www.linkedin.com/company/theaibuilders/"
            target="_blank"
            rel="noopener noreferrer"
            class="w-8 h-8 flex items-center justify-center transition-colors hover:text-gray-100"
            aria-label="View on LinkedIn"
          >
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-4 h-4 text-gray-300"><path d="M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"/><rect width="4" height="12" x="2" y="9"/><circle cx="4" cy="4" r="2"/></svg>
          </a>
        </div>
      </div>
      </div>
    </div>

    <!-- Mobile Navigation Overlay -->
    <div 
      id="mobile-nav-overlay" 
      class="lg:hidden fixed inset-0 z-40 bg-black bg-opacity-50 hidden"
      onclick="closeMobileNav()"
    ></div>

    <!-- Mobile Table of Contents Overlay -->
    <div 
      id="mobile-toc-overlay" 
      class="lg:hidden fixed inset-0 z-40 bg-black bg-opacity-50 hidden"
      onclick="closeMobileToc()"
    ></div>

    <!-- Scroll to Top Button (Mobile Only) -->
    <button
      id="scroll-to-top"
      class="lg:hidden fixed bottom-6 right-6 z-50 p-3 bg-blue-600 hover:bg-blue-700 text-white rounded-full shadow-xl transition-all duration-300 transform opacity-0 pointer-events-none scale-90"
      aria-label="Scroll to top"
      onclick="scrollToTop()"
    >
      <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" stroke-width="2">
        <path stroke-linecap="round" stroke-linejoin="round" d="M5 10l7-7m0 0l7 7m-7-7v18"/>
      </svg>
    </button>

    <!-- Main Layout Container -->
    <div class="flex min-h-screen lg:pt-0 pt-10">
      <!-- Left Sidebar (Full) -->
      <aside 
        id="left-sidebar"
        class="w-80 flex-shrink-0 border-r border-dark-border lg:static fixed left-0 top-0 h-full z-50 bg-dark-bg transform -translate-x-full lg:translate-x-0 transition-all duration-300 ease-in-out"
      >
        <LeftSidebar sections={sections} currentFile={currentFile} />
      </aside>
      
      <!-- Collapsed Sidebar -->
      <aside 
        id="collapsed-sidebar"
        class="w-16 flex-shrink-0 border-r border-dark-border bg-dark-bg fixed left-0 top-0 h-screen z-50 lg:flex flex-col items-center py-6"
        style="display: none;"
      >
        <!-- Toggle Button -->
        <button
          id="collapsed-sidebar-toggle"
          class="p-3 rounded-lg hover:bg-dark-hover transition-colors mb-4"
          aria-label="Expand sidebar"
          onclick="toggleDesktopSidebar()"
        >
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-gray-300"><rect width="18" height="18" x="3" y="3" rx="2"/><path d="M15 3v18"/></svg>
        </button>
        
        <!-- Bottom Icons -->
        <div class="flex flex-col items-center gap-3 mt-auto">
          <a
            href="https://www.theaibuilders.dev/"
            target="_blank"
            rel="noopener noreferrer"
            class="w-8 h-8 flex items-center justify-center transition-colors hover:text-gray-100"
            aria-label="Visit AI Builders Website"
          >
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-gray-300"><circle cx="12" cy="12" r="10"/><path d="M12 2a14.5 14.5 0 0 0 0 20 14.5 14.5 0 0 0 0-20"/><path d="M2 12h20"/></svg>
          </a>
          <a
            href="https://github.com/theaibuilders"
            target="_blank"
            rel="noopener noreferrer"
            class="w-8 h-8 flex items-center justify-center transition-colors hover:text-gray-100"
            aria-label="View on GitHub"
          >
            <svg viewBox="0 0 24 24" fill="currentColor" class="w-5 h-5 text-gray-300">
              <path d="M12 0C5.37 0 0 5.373 0 12c0 5.302 3.438 9.8 8.207 11.387.6.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.108-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576C20.565 21.796 24 17.298 24 12c0-6.627-5.373-12-12-12z"/>
            </svg>
          </a>
          <a
            href="https://x.com/theaibuilders"
            target="_blank"
            rel="noopener noreferrer"
            class="w-8 h-8 flex items-center justify-center transition-colors hover:text-gray-100"
            aria-label="Follow on X"
          >
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-5 h-5 text-gray-300">
              <path d="M18.244 2h3.511l-7.582 8.689L23 22h-6.756l-4.811-6.315L5.912 22H2.4l7.938-9.097L1 2h6.756l4.365 5.739L18.244 2z" />
            </svg>
          </a>
          <a
            href="https://www.linkedin.com/company/theaibuilders/"
            target="_blank"
            rel="noopener noreferrer"
            class="w-8 h-8 flex items-center justify-center transition-colors hover:text-gray-100"
            aria-label="View on LinkedIn"
          >
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-5 h-5 text-gray-300"><path d="M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"/><rect width="4" height="12" x="2" y="9"/><circle cx="4" cy="4" r="2"/></svg>
          </a>
        </div>
      </aside>
      
      <!-- Main Content Area -->
      <main class="flex-1 min-w-0">
        <div class="lg:flex">
          <!-- Tutorial Content -->
          <div class="flex-1 min-w-0">
            <MainContent currentFile={currentFile} />
          </div>
          
          <!-- Right Sidebar (On This Page) -->
          {headings.length > 0 && (
            <aside 
              id="right-sidebar"
              class="lg:w-64 lg:flex-shrink-0 lg:border-l border-dark-border lg:static fixed right-0 top-0 lg:top-0 h-full z-50 bg-dark-bg w-80 transform translate-x-full lg:translate-x-0 transition-transform duration-300 ease-in-out"
            >
              <RightSidebar headings={headings} />
            </aside>
          )}
        </div>
      </main>
    </div>
    <!-- Bottom Left Icons -->
        </div>
    
    <!-- Back to top button -->
    
    <!-- Copy to Clipboard Script -->
    <script>
      function copyToClipboard(text) {
        navigator.clipboard.writeText(text).then(() => {
          // Show success feedback
          console.log('Copied to clipboard');
        }).catch(err => {
          console.error('Failed to copy to clipboard:', err);
        });
      }
      
      // Mobile navigation functions
      function openMobileNav() {
        const sidebar = document.getElementById('left-sidebar');
        const overlay = document.getElementById('mobile-nav-overlay');
        if (sidebar && overlay) {
          sidebar.classList.remove('-translate-x-full');
          overlay.classList.remove('hidden');
          document.body.style.overflow = 'hidden';
        }
      }
      
      function closeMobileNav() {
        const sidebar = document.getElementById('left-sidebar');
        const overlay = document.getElementById('mobile-nav-overlay');
        if (sidebar && overlay) {
          sidebar.classList.add('-translate-x-full');
          overlay.classList.add('hidden');
          document.body.style.overflow = '';
        }
      }
      
      function openMobileToc() {
        const sidebar = document.getElementById('right-sidebar');
        const overlay = document.getElementById('mobile-toc-overlay');
        if (sidebar && overlay) {
          sidebar.classList.remove('translate-x-full');
          overlay.classList.remove('hidden');
          document.body.style.overflow = 'hidden';
        }
      }
      
      function closeMobileToc() {
        const sidebar = document.getElementById('right-sidebar');
        const overlay = document.getElementById('mobile-toc-overlay');
        if (sidebar && overlay) {
          sidebar.classList.add('translate-x-full');
          overlay.classList.add('hidden');
          document.body.style.overflow = '';
        }
      }
      
      // Desktop sidebar toggle functionality
      function toggleDesktopSidebar() {
        const fullSidebar = document.getElementById('left-sidebar');
        const collapsedSidebar = document.getElementById('collapsed-sidebar');
        const mainContent = document.querySelector('main');
        
        if (fullSidebar && collapsedSidebar && mainContent) {
          const isCollapsed = collapsedSidebar.style.display === 'flex';
          
          if (isCollapsed) {
            // Show full sidebar, hide collapsed
            fullSidebar.style.display = '';
            fullSidebar.classList.remove('hidden');
            collapsedSidebar.style.display = 'none';
            // Reset main content margin for full sidebar
            mainContent.style.marginLeft = '';
          } else {
            // Hide full sidebar, show collapsed
            fullSidebar.style.display = 'none';
            fullSidebar.classList.add('hidden');
            collapsedSidebar.style.display = 'flex';
            // Adjust main content margin for collapsed sidebar
            mainContent.style.marginLeft = '4rem'; // w-16 = 4rem
          }

          // Persist new state (true means collapsed)
          const newIsCollapsed = !isCollapsed;
          try {
            localStorage.setItem('sidebar-collapsed', String(newIsCollapsed));
          } catch (e) {
            // Fail silently if storage not available
          }
        }
      }
      
      // Make functions available globally
      window.copyToClipboard = copyToClipboard;
      window.openMobileNav = openMobileNav;
      window.closeMobileNav = closeMobileNav;
      window.openMobileToc = openMobileToc;
      window.closeMobileToc = closeMobileToc;
      window.toggleDesktopSidebar = toggleDesktopSidebar;
      
      // Scroll to top functionality
      function scrollToTop() {
        window.scrollTo({
          top: 0,
          behavior: 'smooth'
        });
      }
      
      // Show/hide scroll to top button based on scroll position
      function toggleScrollButton() {
        const scrollButton = document.getElementById('scroll-to-top');
        if (scrollButton) {
          if (window.scrollY > 300) {
            scrollButton.classList.remove('opacity-0', 'pointer-events-none', 'scale-90');
            scrollButton.classList.add('opacity-100', 'scale-100');
          } else {
            scrollButton.classList.add('opacity-0', 'pointer-events-none', 'scale-90');
            scrollButton.classList.remove('opacity-100', 'scale-100');
          }
        }
      }
      
      // Make scroll functions available globally
      window.scrollToTop = scrollToTop;
      
      // Initialize mobile navigation
      document.addEventListener('DOMContentLoaded', () => {
        const navToggle = document.getElementById('mobile-nav-toggle');
        const tocToggle = document.getElementById('mobile-toc-toggle');
        
        if (navToggle) {
          navToggle.addEventListener('click', openMobileNav);
        }
        
        if (tocToggle) {
          tocToggle.addEventListener('click', openMobileToc);
        }
        
        // Add scroll event listener for scroll to top button
        window.addEventListener('scroll', toggleScrollButton);
        
        // Initial check for scroll button visibility
        toggleScrollButton();
        
        // Close mobile menus on resize to desktop
        window.addEventListener('resize', () => {
          if (window.innerWidth >= 1024) { // lg breakpoint
            closeMobileNav();
            closeMobileToc();
          }
        });
        
        // Close mobile menus when clicking on links
        document.addEventListener('click', (e) => {
          if (e.target.matches('a[href^="/tutorials/"]')) {
            closeMobileNav();
            closeMobileToc();
          }
        });

        // Initialize persisted desktop sidebar state
        try {
          if (window.innerWidth >= 1024) { // only persist on desktop viewports
            const stored = localStorage.getItem('sidebar-collapsed');
            if (stored !== null) {
              const shouldBeCollapsed = stored === 'true';
              const fullSidebar = document.getElementById('left-sidebar');
              const collapsedSidebar = document.getElementById('collapsed-sidebar');
              const mainContent = document.querySelector('main');
              if (fullSidebar && collapsedSidebar && mainContent) {
                if (shouldBeCollapsed) {
                  fullSidebar.style.display = 'none';
                  fullSidebar.classList.add('hidden');
                  collapsedSidebar.style.display = 'flex';
                  mainContent.style.marginLeft = '4rem';
                } else {
                  fullSidebar.style.display = '';
                  fullSidebar.classList.remove('hidden');
                  collapsedSidebar.style.display = 'none';
                  mainContent.style.marginLeft = '';
                }
              }
            }
          }
        } catch (e) {
          // Ignore storage errors
        }
      });
    </script>
  </body>
</html>

<style>
  /* Custom scrollbar styles */
  :global(::-webkit-scrollbar) {
    width: 6px;
  }
  
  :global(::-webkit-scrollbar-track) {
    @apply bg-transparent;
  }
  
  :global(::-webkit-scrollbar-thumb) {
    @apply bg-dark-border rounded-full;
  }
  
  :global(::-webkit-scrollbar-thumb:hover) {
    @apply bg-dark-hover;
  }
  
  /* Notebook cell styles */
  :global(.notebook-cell) {
    @apply mb-6;
  }
  
  :global(.markdown-cell .cell-content) {
    @apply px-4 py-2;
  }
  
  :global(.code-cell) {
    @apply border border-dark-border rounded-lg overflow-hidden;
  }
  
  :global(.cell-input) {
    @apply flex;
  }
  
  :global(.cell-prompt) {
    @apply flex-shrink-0 w-20 p-3 bg-dark-surface border-r border-dark-border text-sm font-mono text-dark-secondary;
  }
  
  :global(.cell-code-container) {
    @apply flex-1 relative;
  }
  
  :global(.cell-code) {
    @apply p-4 bg-dark-surface font-mono text-sm overflow-x-auto;
  }
  
  :global(.cell-output) {
    @apply border-t border-dark-border bg-dark-bg p-4;
  }
  
  :global(.output-stream pre) {
    @apply font-mono text-sm whitespace-pre-wrap;
  }
  
  :global(.output-error) {
    @apply text-red-400;
  }
  
  :global(.output-image img) {
    @apply max-w-full h-auto;
  }
  
  /* Universal typography hierarchy - applies everywhere */
  :global(h1) {
    @apply text-2xl sm:text-3xl lg:text-4xl font-extrabold mb-4 sm:mb-6 text-dark-text;
    margin-top: 2rem;
  }
  
  @media (min-width: 1024px) {
    :global(h1) {
      margin-top: 3rem;
    }
  }
  
  :global(h2) {
    @apply text-xl sm:text-2xl lg:text-3xl font-bold mb-3 sm:mb-4 mt-6 sm:mt-8 text-dark-text;
    margin-top: 2rem;
  }
  
  @media (min-width: 1024px) {
    :global(h2) {
      margin-top: 2.5rem;
    }
  }
  
  :global(h3) {
    @apply text-lg sm:text-xl lg:text-2xl font-semibold mb-2 sm:mb-3 mt-4 sm:mt-6 text-dark-text;
    margin-top: 1.5rem;
  }
  
  @media (min-width: 1024px) {
    :global(h3) {
      margin-top: 2rem;
    }
  }
  
  :global(h4) {
    @apply text-base sm:text-lg lg:text-xl font-semibold mb-2 sm:mb-3 mt-3 sm:mt-5 text-dark-text;
    margin-top: 1.25rem;
  }
  
  @media (min-width: 1024px) {
    :global(h4) {
      margin-top: 1.5rem;
    }
  }
  
  :global(h5) {
    @apply text-base sm:text-lg font-semibold mb-2 mt-3 sm:mt-4 text-dark-text;
    margin-top: 1rem;
  }
  
  @media (min-width: 1024px) {
    :global(h5) {
      margin-top: 1.25rem;
    }
  }
  
  :global(h6) {
    @apply text-sm sm:text-base font-semibold mb-2 mt-2 sm:mt-3 text-dark-text;
    margin-top: 0.75rem;
  }
  
  @media (min-width: 1024px) {
    :global(h6) {
      margin-top: 1rem;
    }
  }
  
  /* Universal paragraph and text styles */
  :global(p) {
    @apply mb-4 sm:mb-6 text-dark-secondary leading-relaxed sm:leading-loose;
    font-size: 0.95rem;
  }
  
  @media (min-width: 640px) {
    :global(p) {
      font-size: 1rem;
    }
  }

  /* Universal list styles based on markdown syntax */
  :global(ul, ol) {
    @apply mb-4 sm:mb-6;
    padding-left: 0;
    list-style: none;
    margin: 1rem 0;
  }
  
  @media (min-width: 640px) {
    :global(ul, ol) {
      margin: 1.5rem 0;
    }
  }
  
  :global(li) {
    @apply mb-2 sm:mb-3 text-dark-secondary leading-relaxed;
    font-size: 0.95rem;
    position: relative;
    padding-left: 1.5rem;
  }
  
  @media (min-width: 640px) {
    :global(li) {
      font-size: 1rem;
    }
  }
  
  /* Bullet points for unordered lists */
  :global(ul li::before) {
    content: "•";
    color: #60a5fa;
    font-weight: bold;
    position: absolute;
    left: 0;
    top: 0;
    font-size: 1.1rem;
  }
  
  /* Numbered lists */
  :global(ol) {
    counter-reset: list-counter;
  }
  :global(ol li) {
    counter-increment: list-counter;
  }
  :global(ol li::before) {
    content: counter(list-counter) ".";
    color: #60a5fa;
    font-weight: bold;
    position: absolute;
    left: 0;
    top: 0;
  }
  
  /* Nested lists */
  :global(ul ul li::before) {
    content: "◦";
    color: #93c5fd;
  }
  :global(ul ul ul li::before) {
    content: "▪";
    color: #ddd6fe;
    font-size: 0.9rem;
  }
  
  
  /* Universal code and inline elements */
  :global(code) {
    @apply bg-light-surface dark:bg-dark-surface px-1.5 sm:px-2 py-1 rounded text-xs sm:text-sm font-mono break-words;
  }
  
  :global(pre) {
    @apply bg-light-surface dark:bg-dark-surface p-3 sm:p-4 rounded-lg overflow-x-auto font-mono text-xs sm:text-sm;
    /* Ensure code blocks don't break the layout on mobile */
    max-width: 100%;
  }
  
  :global(pre code) {
    @apply bg-transparent p-0 text-xs sm:text-sm;
  }
  
  :global(a) {
    @apply text-blue-500 hover:text-blue-400 break-words;
  }
  
  :global(blockquote) {
    @apply border-l-4 border-light-border dark:border-dark-border pl-3 sm:pl-4 italic text-light-secondary dark:text-dark-secondary my-4 sm:my-6;
  }
  
  :global(strong) {
    @apply font-semibold text-light-text dark:text-dark-text;
  }
  
  :global(em) {
    @apply italic text-blue-400;
  }
  
  /* Mobile-specific improvements */
  @media (max-width: 640px) {
    /* Improve touch targets */
    :global(button) {
      min-height: 44px;
      min-width: 44px;
    }
    
    /* Better code block handling on mobile */
    :global(.nb-input) {
      font-size: 12px !important;
    }
    
    :global(.cell-code) {
      padding: 0.75rem !important;
      font-size: 12px !important;
    }
    
    /* Ensure tables are scrollable on mobile */
    :global(table) {
      display: block;
      overflow-x: auto;
      white-space: nowrap;
    }
  }
  
  /* Preserve prose class for specific containers that need it */
  :global(.prose) {
    @apply max-w-none;
  }
</style>
